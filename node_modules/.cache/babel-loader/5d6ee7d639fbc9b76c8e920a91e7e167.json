{"ast":null,"code":"const updateCartItems = (cartItems, item, idx) => {\n  if (item.count === 0) {\n    return [...cartItems.slice(0, idx), ...cartItems.slice(idx + 1)];\n  }\n\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst updateCartItem = (product, item = {}, quantity) => {\n  const {\n    id = product.id,\n    count = 0,\n    title = product.name,\n    total = 0\n  } = item;\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity * product.price\n  };\n};\n\nconst updateOrder = (state, productId, quantity) => {\n  const {\n    productList: {\n      products\n    },\n    shoppingCart: {\n      cartItems\n    }\n  } = state;\n  const product = products.find(({\n    id\n  }) => id === productId);\n  const itemIndex = cartItems.findIndex(({\n    id\n  }) => id === productId);\n  const item = cartItems[itemIndex];\n  const newItem = updateCartItem(product, item, quantity);\n  return {\n    orderTotal: 0,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\n  };\n};\n\nconst updateShoppingCart = (state, action) => {\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0\n    };\n  }\n\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.shoppingCart.cartItems.find(({\n        id\n      }) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updateShoppingCart;","map":{"version":3,"sources":["/Users/yeldarlimton/Documents/spring-react/spring-client/src/reducers/shopping-cart.js"],"names":["updateCartItems","cartItems","item","idx","count","slice","updateCartItem","product","quantity","id","title","name","total","price","updateOrder","state","productId","productList","products","shoppingCart","find","itemIndex","findIndex","newItem","orderTotal","updateShoppingCart","action","undefined","type","payload"],"mappings":"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","sourcesContent":["const updateCartItems = (cartItems, item, idx) => {\n\n  if (item.count === 0) {\n    return [\n      ...cartItems.slice(0, idx),\n      ...cartItems.slice(idx + 1)\n    ];\n  }\n\n  if (idx === -1) {\n    return [\n      ...cartItems,\n      item\n    ];\n  }\n\n  return [\n    ...cartItems.slice(0, idx),\n    item,\n    ...cartItems.slice(idx + 1)\n  ];\n};\n\nconst updateCartItem = (product, item = {}, quantity) => {\n\n  const {\n    id = product.id,\n    count = 0,\n    title = product.name,\n    total = 0 } = item;\n\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity*product.price,\n\n\n  };\n};\n\nconst updateOrder = (state, productId, quantity) => {\n  const { productList: { products }, shoppingCart: { cartItems }} = state;\n\n  const product = products.find(({id}) => id === productId);\n  const itemIndex = cartItems.findIndex(({id}) => id === productId);\n  const item = cartItems[itemIndex];\n\n  const newItem = updateCartItem(product, item, quantity);\n  return {\n    orderTotal: 0,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\n  };\n};\n\nconst updateShoppingCart = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0,\n    }\n  }\n\n  switch(action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updateShoppingCart;\n"]},"metadata":{},"sourceType":"module"}