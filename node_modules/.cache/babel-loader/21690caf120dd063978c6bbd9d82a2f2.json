{"ast":null,"code":"var _jsxFileName = \"/Users/yeldarlimton/Documents/spring-client/src/components/pages/edit-item-form.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { fetchBooksGenre, fetchBooksSeller, saveBook } from \"../../actions\";\nimport { connect } from 'react-redux';\n\nclass Misc extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: '',\n        description: '',\n        price: '',\n        members: '',\n        author: '',\n        genre: null,\n        seller: null,\n        image: null\n      },\n      loading: true,\n      imageload: false,\n      error: false,\n      imageUrl: ``\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchBooksGenre();\n    this.props.fetchBooksSeller();\n    axios.get('/api/v1/shop/detail/' + this.props.match.params.id).then(res => {\n      const data = res.data; // get the data array instead of object\n\n      this.setState({\n        data,\n        loading: false\n      });\n      console.log(data);\n    }).catch(err => {\n      // log request error and prevent access to undefined state\n      this.setState({\n        loading: false,\n        error: true\n      });\n      console.error(err);\n    });\n  }\n\n  render() {\n    const {\n      genre,\n      seller\n    } = this.props;\n\n    function getBase64(img, callback) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => callback(reader.result));\n      reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file) {\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n      if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n      }\n\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n      }\n\n      return isJpgOrPng && isLt2M;\n    }\n\n    const handleChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        data: { ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    const categoryChange = value => {\n      console.log(value);\n      this.setState({\n        data: { ...this.state.data,\n          genre: value\n        }\n      });\n    };\n\n    const sellerChange = value => {\n      console.log(value);\n      this.setState({\n        data: { ...this.state.data,\n          seller: value\n        }\n      });\n    };\n\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, this.state.imageload ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 63\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Upload\"));\n\n    const fileChange = info => {\n      console.log(info);\n\n      if (info.file.status === 'uploading') {\n        this.setState({\n          imageload: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => {\n          this.setState({\n            imageload: false,\n            imageUrl: imageUrl\n          });\n        });\n        this.setState({\n          data: { ...this.state.data,\n            image: info.file.originFileObj\n          }\n        });\n      }\n    };\n\n    const handleOk = e => {\n      const fm = new FormData();\n      Object.keys(this.state.data).map(key => {\n        fm.append([key], this.state.data[key]);\n      });\n      console.log(fm);\n      console.log(this.state.data);\n      axios.put('/api/v1/shop/detail/' + this.props.match.params.id, fm, {\n        headers: {\n          \"Content-type\": undefined\n        }\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => console.log(err)); // e.preventDefault();\n    };\n\n    const onFinish = values => {\n      console.log(values);\n    };\n\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, \" Loading... \"));\n    }\n\n    if (this.state.error || !this.state.data) {\n      // if request failed or data is empty don't try to access it either\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \" An error occured \"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \"Change data\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.data.title,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, \"description:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.data.description,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"price\",\n      value: this.state.data.price,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \"Member:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"member\",\n      value: this.state.data.member,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"Author:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      value: this.state.data.author,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      onChange: categoryChange,\n      name: \"genre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, genre.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }\n    }, item.name))), /*#__PURE__*/React.createElement(Select, {\n      onChange: categoryChange,\n      name: \"seller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, seller.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 42\n      }\n    }, item.username))), /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: fileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, this.state.imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 44\n      }\n    }) : uploadButton), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn-large waves-effect waves-light xbutton\",\n      value: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  genreList: {\n    genre\n  },\n  sellerList: {\n    seller\n  }\n}) => {\n  return {\n    genre,\n    seller\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchBooksSeller,\n  fetchBooksGenre,\n  saveBook // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n  // return bindActionCreators({\n  //     booksLoaded\n  // }, dispatch);\n  // booksLoaded: (newBooks) => {\n  //     dispatch(booksLoaded(newBooks));\n  // }\n\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Misc));","map":{"version":3,"sources":["/Users/yeldarlimton/Documents/spring-client/src/components/pages/edit-item-form.js"],"names":["React","Component","axios","withRouter","Select","Upload","message","LoadingOutlined","PlusOutlined","fetchBooksGenre","fetchBooksSeller","saveBook","connect","Misc","state","data","title","description","price","members","author","genre","seller","image","loading","imageload","error","imageUrl","componentDidMount","props","get","match","params","id","then","res","setState","console","log","catch","err","render","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","isLt2M","size","handleChange","e","target","value","name","categoryChange","sellerChange","uploadButton","fileChange","info","status","originFileObj","handleOk","fm","FormData","Object","keys","map","key","append","put","headers","undefined","onFinish","values","member","item","username","width","mapStateToProps","genreList","sellerList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom'\nimport { Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport {fetchBooksGenre, fetchBooksSeller, saveBook} from \"../../actions\";\nimport {connect} from 'react-redux'\n\nclass Misc extends Component {\n    state = {\n        data: {\n            title: '',\n            description: '',\n            price: '',\n            members: '',\n            author: '',\n            genre: null,\n            seller: null,\n            image: null\n        },\n        loading: true,\n        imageload: false,\n        error: false,\n        imageUrl: ``\n    }\n\n\n    componentDidMount() {\n        this.props.fetchBooksGenre()\n        this.props.fetchBooksSeller()\n\n        axios.get('/api/v1/shop/detail/' + this.props.match.params.id)\n            .then(res => {\n                const data = res.data; // get the data array instead of object\n                this.setState({ data, loading: false });\n                console.log(data);\n            })\n            .catch(err => { // log request error and prevent access to undefined state\n                this.setState({ loading: false, error: true });\n                console.error(err);\n            })\n    }\n\n\n    render() {\n        const {genre, seller} = this.props\n\n\n        function getBase64(img, callback) {\n            const reader = new FileReader();\n            reader.addEventListener('load', () => callback(reader.result));\n            reader.readAsDataURL(img);\n        }\n\n        function beforeUpload(file) {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n            if (!isJpgOrPng) {\n                message.error('You can only upload JPG/PNG file!');\n            }\n            const isLt2M = file.size / 1024 / 1024 < 2;\n            if (!isLt2M) {\n                message.error('Image must smaller than 2MB!');\n            }\n            return isJpgOrPng && isLt2M;\n        }\n\n        const handleChange = (e) => {\n            console.log(e.target.value)\n            this.setState({\n                data: {...this.state.data, [e.target.name]: e.target.value}\n            })\n        }\n\n        const categoryChange = value => {\n            console.log(value)\n            this.setState({\n                data: {...this.state.data, genre: value}\n            })\n        }\n\n        const sellerChange = value => {\n            console.log(value)\n            this.setState({\n                data: {...this.state.data, seller: value}\n            })\n        }\n\n\n\n        const uploadButton = (\n            <div>\n                {this.state.imageload ? <LoadingOutlined /> : <PlusOutlined />}\n                <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n\n        const fileChange = info => {\n            console.log(info)\n            if (info.file.status === 'uploading') {\n                this.setState({\n                    imageload: true\n                })\n                return;\n            }\n            if (info.file.status === 'done') {\n                // Get this url from response in real world.\n                getBase64(info.file.originFileObj, imageUrl => {\n                    this.setState({\n                        imageload: false,\n                        imageUrl: imageUrl\n                    })\n                });\n                this.setState({data: {...this.state.data, image: info.file.originFileObj}})\n            }\n        }\n\n        const handleOk = (e) => {\n            const fm = new FormData()\n            Object.keys(this.state.data).map(key => {\n                fm.append([key],this.state.data[key])\n            })\n            console.log(fm)\n            console.log(this.state.data)\n            axios.put('/api/v1/shop/detail/' + this.props.match.params.id, fm, {\n                headers: {\n                    \"Content-type\": undefined\n                }})\n                .then(res => {\n                    console.log(res.data)\n\n\n                })\n                .catch(err => console.log(err))\n\n            // e.preventDefault();\n        };\n\n        const onFinish = values => {\n            console.log(values);\n        };\n\n        if (this.state.loading) {\n            return(\n                <div>\n                    <p> Loading... </p>\n                </div>\n            )\n        }\n        if (this.state.error || !this.state.data) { // if request failed or data is empty don't try to access it either\n            return(\n                <div>\n                    <p> An error occured </p>\n                </div>\n            )\n        }\n        return (\n            <form onSubmit={handleOk}>\n                <h2 className=\"center\" >Change data</h2>\n                <h5>Title:</h5>\n                <input type=\"text\" name=\"title\" value={ this.state.data.title } onChange={handleChange}/>\n                <h5>description:</h5>\n                <input type=\"text\" name=\"description\" value={ this.state.data.description } onChange={handleChange} />\n                <h5>Price:</h5>\n                <input type=\"text\" name=\"price\" value={ this.state.data.price } onChange={handleChange}/>\n                <h5>Member:</h5>\n                <input type=\"text\" name=\"member\" value={ this.state.data.member } onChange={handleChange}/>\n\n                <h5>Author:</h5>\n                <input type=\"text\" name=\"author\" value={ this.state.data.author } onChange={handleChange}/>\n                <Select onChange={categoryChange} name=\"genre\">\n                    {genre.map(item => (<option value={item.id}>{item.name}</option>))}\n                </Select>\n                <Select onChange={categoryChange} name=\"seller\">\n                    {seller.map(item => (<option value={item.id}>{item.username}</option>))}\n                </Select>\n\n                <Upload\n                    name=\"image\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    beforeUpload={beforeUpload}\n                    onChange={fileChange}\n                >\n                    {this.state.imageUrl ? <img src={this.state.imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                </Upload>\n\n                <input type=\"submit\" className=\"btn-large waves-effect waves-light xbutton\" value=\"Save\"/>\n            </form>\n\n\n\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ genreList: { genre }, sellerList: {seller}} ) => {\n    return { genre, seller }\n};\n\n\n\nconst mapDispatchToProps = {\n    fetchBooksSeller,\n    fetchBooksGenre,\n    saveBook\n\n\n    // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n\n\n    // return bindActionCreators({\n    //     booksLoaded\n    // }, dispatch);\n    // booksLoaded: (newBooks) => {\n    //     dispatch(booksLoaded(newBooks));\n    // }\n\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Misc));"]},"metadata":{},"sourceType":"module"}