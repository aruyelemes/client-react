{"ast":null,"code":"var _jsxFileName = \"/Users/yeldarlimton/Desktop/Desktop_Yeldar/study/java/shop/spring-client/src/components/book-modal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Form, Input, Upload } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { saveBook } from \"../actions\"; //\n// function getBase64(img, callback) {\n//     const reader = new FileReader();\n//     reader.addEventListener('load', () => callback(reader.result));\n//     reader.readAsDataURL(img);\n// }\n//\n// function beforeUpload(file) {\n//     const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n//     if (!isJpgOrPng) {\n//         message.error('You can only upload JPG/PNG file!');\n//     }\n//     const isLt2M = file.size / 1024 / 1024 < 2;\n//     if (!isLt2M) {\n//         message.error('Image must smaller than 2MB!');\n//     }\n//     return isJpgOrPng && isLt2M;\n// }\n// function randomInteger(min, max) {\n//     // получить случайное число от (min-0.5) до (max+0.5)\n//     let rand = min - 0.5 + Math.random() * (max - min + 1);\n//     return Math.round(rand);\n// }\n\nfunction ModalBook(props) {\n  const {\n    modalBlogVisible,\n    close\n  } = props;\n  const [visible, setVisible] = useState(modalBlogVisible); // const [imageUrl, setImageUrl] = useState(``)\n\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    title: '',\n    price: ''\n  });\n  useEffect(() => {\n    setVisible(modalBlogVisible);\n  }, [modalBlogVisible]);\n\n  const handleOk = () => {\n    props.saveBook(formData);\n    close();\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not validate email!',\n      number: '${label} is not a validate number!'\n    },\n    number: {\n      range: '${label} must be between ${min} and ${max}'\n    }\n  };\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"Add Book\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['product', 'name'],\n    label: \"Title\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    value: formData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['product', 'price'],\n    label: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"price\",\n    value: formData.price,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }))));\n}\n\nconst mapStateToProps = null;\nconst mapDispatchToProps = {\n  saveBook\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalBook);","map":{"version":3,"sources":["/Users/yeldarlimton/Desktop/Desktop_Yeldar/study/java/shop/spring-client/src/components/book-modal.js"],"names":["React","useState","useEffect","Modal","Form","Input","Upload","LoadingOutlined","PlusOutlined","connect","saveBook","ModalBook","props","modalBlogVisible","close","visible","setVisible","loading","setLoading","formData","setFormData","title","price","handleOk","onFinish","values","console","log","validateMessages","required","types","email","number","range","handleChange","e","target","value","name","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Modal, Form, Input, Upload } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport { connect } from 'react-redux'\nimport { saveBook } from \"../actions\";\n\n//\n// function getBase64(img, callback) {\n//     const reader = new FileReader();\n//     reader.addEventListener('load', () => callback(reader.result));\n//     reader.readAsDataURL(img);\n// }\n//\n// function beforeUpload(file) {\n//     const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n//     if (!isJpgOrPng) {\n//         message.error('You can only upload JPG/PNG file!');\n//     }\n//     const isLt2M = file.size / 1024 / 1024 < 2;\n//     if (!isLt2M) {\n//         message.error('Image must smaller than 2MB!');\n//     }\n//     return isJpgOrPng && isLt2M;\n// }\n\n\n// function randomInteger(min, max) {\n//     // получить случайное число от (min-0.5) до (max+0.5)\n//     let rand = min - 0.5 + Math.random() * (max - min + 1);\n//     return Math.round(rand);\n// }\n\nfunction ModalBook(props) {\n    const {modalBlogVisible, close } = props\n    const [visible, setVisible] = useState(modalBlogVisible)\n    // const [imageUrl, setImageUrl] = useState(``)\n    const [loading, setLoading] = useState(false)\n    const [formData, setFormData] = useState({\n        title: '',\n        price: '',\n    })\n\n    useEffect(() => {\n        setVisible(modalBlogVisible)\n    }, [modalBlogVisible])\n\n\n\n\n\n\n    const handleOk = () => {\n        props.saveBook(formData)\n\n        close();\n    };\n\n    const onFinish = values => {\n        console.log(values);\n    };\n\n    const validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not validate email!',\n            number: '${label} is not a validate number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n    const handleChange = e => {\n        console.log(e.target.value)\n        setFormData({...formData, [e.target.name]: e.target.value})\n    }\n\n\n\n    return (\n        <Modal\n            title=\"Add Book\"\n            visible={visible}\n            onOk={handleOk}\n            onCancel={close}\n        >\n\n            <Form layout=\"vertical\" name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Form.Item name={['product', 'name']} label=\"Title\" rules={[{ required: true }]}>\n                    <Input name=\"name\" value={formData.name} onChange={handleChange}/>\n                </Form.Item>\n\n\n\n                <Form.Item name={['product', 'price']} label=\"Price\">\n                    <Input name=\"price\" value={formData.price} onChange={handleChange}/>\n                </Form.Item>\n\n\n            </Form>\n\n        </Modal>\n    );\n}\n\nconst mapStateToProps = null;\n\n\n\nconst mapDispatchToProps = {\n        saveBook\n\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalBook);\n\n\n"]},"metadata":{},"sourceType":"module"}