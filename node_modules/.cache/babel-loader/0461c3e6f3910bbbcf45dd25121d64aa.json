{"ast":null,"code":"var _jsxFileName = \"/Users/yeldarlimton/Documents/spring-client/src/components/book-modal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Form, Input, Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { fetchBooksGenre, saveBook, fetchBooksSeller } from \"../actions\";\nimport { compose } from \"../utils\";\nimport { withBookstoreService } from \"./hoc\";\nconst {\n  Option\n} = Select;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nconst onMount = props => () => {\n  props.fetchBooksGenre();\n  props.fetchBooksSeller();\n}; // function randomInteger(min, max) {\n//     // получить случайное число от (min-0.5) до (max+0.5)\n//     let rand = min - 0.5 + Math.random() * (max - min + 1);\n//     return Math.round(rand);\n// }\n\n\nfunction ModalBook(props) {\n  const {\n    modalBlogVisible,\n    close\n  } = props;\n  const [visible, setVisible] = useState(modalBlogVisible);\n  const [imageUrl, setImageUrl] = useState(``);\n  const [loading, setLoading] = useState(false);\n  const {\n    genre,\n    seller\n  } = props;\n  const [formData, setFormData] = useState({\n    title: ``,\n    description: ``,\n    price: 0,\n    member: ``,\n    author: ``,\n    genre: null,\n    image: null,\n    seller: null\n  });\n  useEffect(() => {\n    setVisible(modalBlogVisible);\n  }, [modalBlogVisible]);\n  useEffect(onMount(props), []);\n\n  const handleOk = () => {\n    props.saveBook(formData);\n    close();\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not validate email!',\n      number: '${label} is not a validate number!'\n    },\n    number: {\n      range: '${label} must be between ${min} and ${max}'\n    }\n  };\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const categoryChange = value => {\n    console.log(value);\n    setFormData({ ...formData,\n      genre: value\n    });\n  };\n\n  const sellerChange = value => {\n    console.log(value);\n    setFormData({ ...formData,\n      seller: value\n    });\n  };\n\n  const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 46\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Upload\"));\n\n  const fileChange = info => {\n    console.log(info);\n\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => {\n        setLoading(false);\n        setImageUrl(imageUrl);\n      });\n      setFormData({ ...formData,\n        image: info.file.originFileObj\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"Add Book\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    name: \"nest-messages\",\n    onFinish: onFinish,\n    validateMessages: validateMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['book', 'title'],\n    label: \"Title\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"title\",\n    value: formData.title,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['book', 'description'],\n    label: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    name: \"description\",\n    value: formData.description,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['book', 'price'],\n    label: \"Price\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"price\",\n    value: formData.price,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['book', 'member'],\n    label: \"Member\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"member\",\n    value: formData.member,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['book', 'author'],\n    label: \"Author\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"author\",\n    value: formData.author,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['book', 'genre'],\n    label: \"Genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: categoryChange,\n    name: \"genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, genre.map(item => /*#__PURE__*/React.createElement(Option, {\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 45\n    }\n  }, item.name)))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['book', 'seller'],\n    label: \"Seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: sellerChange,\n    name: \"seller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, seller.map(item => /*#__PURE__*/React.createElement(Option, {\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 46\n    }\n  }, item.username)))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    name: \"image\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    beforeUpload: beforeUpload,\n    onChange: fileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"avatar\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }) : uploadButton))));\n}\n\nconst mapStateToProps = ({\n  genreList: {\n    genre\n  },\n  sellerList: {\n    seller\n  }\n}) => {\n  return {\n    genre,\n    seller\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchBooksSeller,\n  fetchBooksGenre,\n  saveBook // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n  // return bindActionCreators({\n  //     booksLoaded\n  // }, dispatch);\n  // booksLoaded: (newBooks) => {\n  //     dispatch(booksLoaded(newBooks));\n  // }\n\n};\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(ModalBook);","map":{"version":3,"sources":["/Users/yeldarlimton/Documents/spring-client/src/components/book-modal.js"],"names":["React","useState","useEffect","Modal","Form","Input","Select","Upload","message","LoadingOutlined","PlusOutlined","connect","fetchBooksGenre","saveBook","fetchBooksSeller","compose","withBookstoreService","Option","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","onMount","props","ModalBook","modalBlogVisible","close","visible","setVisible","imageUrl","setImageUrl","loading","setLoading","genre","seller","formData","setFormData","title","description","price","member","author","image","handleOk","onFinish","values","console","log","validateMessages","required","types","email","number","range","handleChange","e","target","value","name","categoryChange","sellerChange","uploadButton","fileChange","info","status","originFileObj","map","item","id","username","width","mapStateToProps","genreList","sellerList","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,OAA7C,QAA4D,MAA5D;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,eAAR,EAAyBC,QAAzB,EAAmCC,gBAAnC,QAA0D,YAA1D;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,oBAAR,QAAmC,OAAnC;AACA,MAAM;AAACC,EAAAA;AAAD,IAAWX,MAAjB;;AAEA,SAASY,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAC9B,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACH;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,QAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AACA,MAAI,CAACD,UAAL,EAAiB;AACbpB,IAAAA,OAAO,CAACsB,KAAR,CAAc,mCAAd;AACH;;AACD,QAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACTvB,IAAAA,OAAO,CAACsB,KAAR,CAAc,8BAAd;AACH;;AACD,SAAOF,UAAU,IAAIG,MAArB;AACH;;AAED,MAAME,OAAO,GAAGC,KAAK,IAAI,MAAM;AAC3BA,EAAAA,KAAK,CAACtB,eAAN;AACAsB,EAAAA,KAAK,CAACpB,gBAAN;AAEH,CAJD,C,CAMA;AACA;AACA;AACA;AACA;;;AAEA,SAASqB,SAAT,CAAmBD,KAAnB,EAA0B;AACtB,QAAM;AAACE,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAA6BH,KAAnC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAACmC,gBAAD,CAAtC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BxC,QAAQ,CAAE,EAAF,CAAxC;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAC2C,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBX,KAAxB;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0B9C,QAAQ,CAAC;AACrC+C,IAAAA,KAAK,EAAG,EAD6B;AAErCC,IAAAA,WAAW,EAAG,EAFuB;AAGrCC,IAAAA,KAAK,EAAE,CAH8B;AAIrCC,IAAAA,MAAM,EAAG,EAJ4B;AAKrCC,IAAAA,MAAM,EAAG,EAL4B;AAMrCR,IAAAA,KAAK,EAAE,IAN8B;AAOrCS,IAAAA,KAAK,EAAE,IAP8B;AAQrCR,IAAAA,MAAM,EAAE;AAR6B,GAAD,CAAxC;AAWA3C,EAAAA,SAAS,CAAC,MAAM;AACZqC,IAAAA,UAAU,CAACH,gBAAD,CAAV;AACH,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAMAlC,EAAAA,SAAS,CAAC+B,OAAO,CAACC,KAAD,CAAR,EAAiB,EAAjB,CAAT;;AAIA,QAAMoB,QAAQ,GAAG,MAAM;AACnBpB,IAAAA,KAAK,CAACrB,QAAN,CAAeiC,QAAf;AAEAT,IAAAA,KAAK;AACR,GAJD;;AAMA,QAAMkB,QAAQ,GAAGC,MAAM,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAFD;;AAIA,QAAMG,gBAAgB,GAAG;AACrBC,IAAAA,QAAQ,EAAE,uBADW;AAErBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,iCADJ;AAEHC,MAAAA,MAAM,EAAE;AAFL,KAFc;AAMrBA,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH;AANa,GAAzB;;AAWA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACC,MAAF,CAASC,KAArB;AACArB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACoB,CAAC,CAACC,MAAF,CAASE,IAAV,GAAiBH,CAAC,CAACC,MAAF,CAASC;AAAxC,KAAD,CAAX;AACH,GAHD;;AAKA,QAAME,cAAc,GAAGF,KAAK,IAAI;AAC5BX,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACArB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcF,MAAAA,KAAK,EAAEwB;AAArB,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMG,YAAY,GAAGH,KAAK,IAAI;AAC1BX,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACArB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcD,MAAAA,MAAM,EAAEuB;AAAtB,KAAD,CAAX;AACH,GAHD;;AAOA,QAAMI,YAAY,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,OAAO,gBAAG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAyB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;;AAOA,QAAM+B,UAAU,GAAGC,IAAI,IAAI;AACvBjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;;AACA,QAAIA,IAAI,CAAC/C,IAAL,CAAUgD,MAAV,KAAqB,WAAzB,EAAsC;AAClChC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACH;;AACD,QAAI+B,IAAI,CAAC/C,IAAL,CAAUgD,MAAV,KAAqB,MAAzB,EAAiC;AAC7B;AACAzD,MAAAA,SAAS,CAACwD,IAAI,CAAC/C,IAAL,CAAUiD,aAAX,EAA0BpC,QAAQ,IAAI;AAC3CG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,WAAW,CAACD,QAAD,CAAX;AACH,OAHQ,CAAT;AAKAO,MAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcO,QAAAA,KAAK,EAAEqB,IAAI,CAAC/C,IAAL,CAAUiD;AAA/B,OAAD,CAAX;AACH;AACJ,GAfD;;AAkBA,sBACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,OAAO,EAAEtC,OAFb;AAGI,IAAA,IAAI,EAAEgB,QAHV;AAII,IAAA,QAAQ,EAAEjB,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,eAA7B;AAA6C,IAAA,QAAQ,EAAEkB,QAAvD;AAAiE,IAAA,gBAAgB,EAAEI,gBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CAAjB;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAkD,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAEd,QAAQ,CAACE,KAApC;AAA2C,IAAA,QAAQ,EAAEiB,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAOI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,aAAT,CAAjB;AAA0C,IAAA,KAAK,EAAC,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAC,aAArB;AAAmC,IAAA,KAAK,EAAEnB,QAAQ,CAACG,WAAnD;AAAgE,IAAA,QAAQ,EAAEgB,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,eAaI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CAAjB;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAkD,IAAA,KAAK,EAAE,CAAC;AAAEL,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAEd,QAAQ,CAACI,KAApC;AAA2C,IAAA,QAAQ,EAAEe,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,eAiBI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT,CAAjB;AAAqC,IAAA,KAAK,EAAC,QAA3C;AAAoD,IAAA,KAAK,EAAE,CAAC;AAAEL,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEd,QAAQ,CAACK,MAArC;AAA6C,IAAA,QAAQ,EAAEc,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,eAqBI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT,CAAjB;AAAqC,IAAA,KAAK,EAAC,QAA3C;AAAoD,IAAA,KAAK,EAAE,CAAC;AAAEL,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEd,QAAQ,CAACM,MAArC;AAA6C,IAAA,QAAQ,EAAEa,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArBJ,eAyBI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CAAjB;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEK,cAAlB;AAAkC,IAAA,IAAI,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1B,KAAK,CAACiC,GAAN,CAAUC,IAAI,iBAAK,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,IAAI,CAACT,IAA9B,CAAnB,CADL,CADJ,CAzBJ,eA+BI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT,CAAjB;AAAqC,IAAA,KAAK,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEE,YAAlB;AAAgC,IAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1B,MAAM,CAACgC,GAAP,CAAWC,IAAI,iBAAK,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,IAAI,CAACE,QAA9B,CAApB,CADL,CADJ,CA/BJ,eAqCI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,QAAQ,EAAC,cAFb;AAGI,IAAA,SAAS,EAAC,iBAHd;AAII,IAAA,cAAc,EAAE,KAJpB;AAKI,IAAA,MAAM,EAAC,kDALX;AAMI,IAAA,YAAY,EAAEtD,YANlB;AAOI,IAAA,QAAQ,EAAE+C,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKjC,QAAQ,gBAAG;AAAK,IAAA,GAAG,EAAEA,QAAV;AAAoB,IAAA,GAAG,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAE;AAAEyC,MAAAA,KAAK,EAAE;AAAT,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmET,YAThF,CADJ,CArCJ,CAPJ,CADJ;AA+DH;;AAED,MAAMU,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAE;AAAEvC,IAAAA;AAAF,GAAb;AAAwBwC,EAAAA,UAAU,EAAE;AAACvC,IAAAA;AAAD;AAApC,CAAD,KAAoD;AACxE,SAAO;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACH,CAFD;;AAMA,MAAMwC,kBAAkB,GAAG;AACnBvE,EAAAA,gBADmB;AAEnBF,EAAAA,eAFmB;AAGnBC,EAAAA,QAHmB,CAMvB;AAGA;AACA;AACA;AACA;AACA;AACA;;AAduB,CAA3B;AAkBA,eAAeE,OAAO,CAACC,oBAAoB,EAArB,EAAyBL,OAAO,CAACuE,eAAD,EAAkBG,kBAAlB,CAAhC,CAAP,CAA8ElD,SAA9E,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Modal, Form, Input, Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\n\n\nimport { connect } from 'react-redux'\nimport {fetchBooksGenre, saveBook, fetchBooksSeller} from \"../actions\";\nimport {compose} from \"../utils\";\nimport {withBookstoreService} from \"./hoc\";\nconst {Option} = Select\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n        message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n}\n\nconst onMount = props => () => {\n    props.fetchBooksGenre()\n    props.fetchBooksSeller()\n\n}\n\n// function randomInteger(min, max) {\n//     // получить случайное число от (min-0.5) до (max+0.5)\n//     let rand = min - 0.5 + Math.random() * (max - min + 1);\n//     return Math.round(rand);\n// }\n\nfunction ModalBook(props) {\n    const {modalBlogVisible, close } = props\n    const [visible, setVisible] = useState(modalBlogVisible)\n    const [imageUrl, setImageUrl] = useState(``)\n    const [loading, setLoading] = useState(false)\n    const {genre, seller} = props\n    const [formData, setFormData] = useState({\n        title: ``,\n        description: ``,\n        price: 0,\n        member: ``,\n        author: ``,\n        genre: null,\n        image: null,\n        seller: null\n    })\n\n    useEffect(() => {\n        setVisible(modalBlogVisible)\n    }, [modalBlogVisible])\n\n\n\n    useEffect(onMount(props), [])\n\n\n\n    const handleOk = () => {\n        props.saveBook(formData)\n\n        close();\n    };\n\n    const onFinish = values => {\n        console.log(values);\n    };\n\n    const validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not validate email!',\n            number: '${label} is not a validate number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n    const handleChange = e => {\n        console.log(e.target.value)\n        setFormData({...formData, [e.target.name]: e.target.value})\n    }\n\n    const categoryChange = value => {\n        console.log(value)\n        setFormData({...formData, genre: value})\n    }\n\n    const sellerChange = value => {\n        console.log(value)\n        setFormData({...formData, seller: value})\n    }\n\n\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div className=\"ant-upload-text\">Upload</div>\n        </div>\n    );\n\n    const fileChange = info => {\n        console.log(info)\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl => {\n                setLoading(false);\n                setImageUrl(imageUrl)\n            });\n\n            setFormData({...formData, image: info.file.originFileObj})\n        }\n    }\n\n\n    return (\n        <Modal\n            title=\"Add Book\"\n            visible={visible}\n            onOk={handleOk}\n            onCancel={close}\n        >\n\n            <Form layout=\"vertical\" name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Form.Item name={['book', 'title']} label=\"Title\" rules={[{ required: true }]}>\n                    <Input name=\"title\" value={formData.title} onChange={handleChange}/>\n                </Form.Item>\n\n\n\n                <Form.Item name={['book', 'description']} label=\"Description\">\n                    <Input.TextArea name=\"description\" value={formData.description} onChange={handleChange}/>\n                </Form.Item>\n\n\n\n                <Form.Item name={['book', 'price']} label=\"Price\" rules={[{ required: true }]}>\n                    <Input name=\"price\" value={formData.price} onChange={handleChange} />\n                </Form.Item>\n\n                <Form.Item name={['book', 'member']} label=\"Member\" rules={[{ required: true }]}>\n                    <Input name=\"member\" value={formData.member} onChange={handleChange} />\n                </Form.Item>\n\n                <Form.Item name={['book', 'author']} label=\"Author\" rules={[{ required: true }]}>\n                    <Input name=\"author\" value={formData.author} onChange={handleChange} />\n                </Form.Item>\n\n                <Form.Item name={['book', 'genre']} label=\"Genre\">\n                    <Select onChange={categoryChange} name=\"genre\">\n                        {genre.map(item => (<Option value={item.id}>{item.name}</Option>))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item name={['book', 'seller']} label=\"Seller\">\n                    <Select onChange={sellerChange} name=\"seller\">\n                        {seller.map(item => (<Option value={item.id}>{item.username}</Option>))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item>\n                    <Upload\n                        name=\"image\"\n                        listType=\"picture-card\"\n                        className=\"avatar-uploader\"\n                        showUploadList={false}\n                        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                        beforeUpload={beforeUpload}\n                        onChange={fileChange}\n                    >\n                        {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                    </Upload>\n                </Form.Item>\n\n            </Form>\n\n        </Modal>\n    );\n}\n\nconst mapStateToProps = ({ genreList: { genre }, sellerList: {seller}} ) => {\n    return { genre, seller }\n};\n\n\n\nconst mapDispatchToProps = {\n        fetchBooksSeller,\n        fetchBooksGenre,\n        saveBook\n\n\n    // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n\n\n    // return bindActionCreators({\n    //     booksLoaded\n    // }, dispatch);\n    // booksLoaded: (newBooks) => {\n    //     dispatch(booksLoaded(newBooks));\n    // }\n\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(ModalBook);\n\n\n"]},"metadata":{},"sourceType":"module"}