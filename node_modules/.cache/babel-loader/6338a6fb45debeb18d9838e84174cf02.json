{"ast":null,"code":"var _jsxFileName = \"/Users/yeldarlimton/Documents/spring-client/src/components/pages/edit-item-form.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { saveBook } from \"../../actions\";\nimport { connect } from 'react-redux';\n\nclass Misc extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: '',\n        price: ''\n      },\n      loading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/products/' + this.props.match.params.id).then(res => {\n      const data = res.data; // get the data array instead of object\n\n      this.setState({\n        data,\n        loading: false\n      });\n      console.log(data);\n    }).catch(err => {\n      // log request error and prevent access to undefined state\n      this.setState({\n        loading: false,\n        error: true\n      });\n      console.error(err);\n    });\n  }\n\n  render() {\n    const handleChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        data: { ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    const handleOk = e => {\n      const fm = new FormData();\n      Object.keys(this.state.data).map(key => {\n        fm.append([key], this.state.data[key]);\n      });\n      console.log(fm);\n      console.log(this.state.data);\n      axios.put('/api/v1/shop/detail/' + this.props.match.params.id, fm, {\n        headers: {\n          \"Content-type\": undefined\n        }\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => console.log(err)); // e.preventDefault();\n    };\n\n    const onFinish = values => {\n      console.log(values);\n    };\n\n    if (this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \" Loading... \"));\n    }\n\n    if (this.state.error || !this.state.data) {\n      // if request failed or data is empty don't try to access it either\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, \" An error occured \"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Change data\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.data.title,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"description:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.data.description,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"price\",\n      value: this.state.data.price,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Member:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"member\",\n      value: this.state.data.member,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Author:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      value: this.state.data.author,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      onChange: categoryChange,\n      name: \"genre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, genre.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    }, item.name))), /*#__PURE__*/React.createElement(Select, {\n      onChange: categoryChange,\n      name: \"seller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, seller.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 42\n      }\n    }, item.username))), /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: fileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, this.state.imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 44\n      }\n    }) : uploadButton), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn-large waves-effect waves-light xbutton\",\n      value: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  genreList: {\n    genre\n  },\n  sellerList: {\n    seller\n  }\n}) => {\n  return {\n    genre,\n    seller\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchBooksSeller,\n  fetchBooksGenre,\n  saveBook // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n  // return bindActionCreators({\n  //     booksLoaded\n  // }, dispatch);\n  // booksLoaded: (newBooks) => {\n  //     dispatch(booksLoaded(newBooks));\n  // }\n\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Misc));","map":{"version":3,"sources":["/Users/yeldarlimton/Documents/spring-client/src/components/pages/edit-item-form.js"],"names":["React","Component","axios","withRouter","Select","Upload","message","LoadingOutlined","PlusOutlined","saveBook","connect","Misc","state","data","title","price","loading","error","componentDidMount","get","props","match","params","id","then","res","setState","console","log","catch","err","render","handleChange","e","target","value","name","handleOk","fm","FormData","Object","keys","map","key","append","put","headers","undefined","onFinish","values","description","member","author","categoryChange","genre","item","seller","username","beforeUpload","fileChange","imageUrl","width","uploadButton","mapStateToProps","genreList","sellerList","mapDispatchToProps","fetchBooksSeller","fetchBooksGenre"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom'\nimport { Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { saveBook} from \"../../actions\";\nimport {connect} from 'react-redux'\n\nclass Misc extends Component {\n    state = {\n        data: {\n            title: '',\n            price: ''\n        },\n        loading: true,\n        error: false,\n    }\n\n\n    componentDidMount() {\n\n\n        axios.get('/products/' + this.props.match.params.id)\n            .then(res => {\n                const data = res.data; // get the data array instead of object\n                this.setState({ data, loading: false });\n                console.log(data);\n            })\n            .catch(err => { // log request error and prevent access to undefined state\n                this.setState({ loading: false, error: true });\n                console.error(err);\n            })\n    }\n\n\n    render() {\n\n        const handleChange = (e) => {\n            console.log(e.target.value)\n            this.setState({\n                data: {...this.state.data, [e.target.name]: e.target.value}\n            })\n        }\n\n        const handleOk = (e) => {\n            const fm = new FormData()\n            Object.keys(this.state.data).map(key => {\n                fm.append([key],this.state.data[key])\n            })\n            console.log(fm)\n            console.log(this.state.data)\n            axios.put('/api/v1/shop/detail/' + this.props.match.params.id, fm, {\n                headers: {\n                    \"Content-type\": undefined\n                }})\n                .then(res => {\n                    console.log(res.data)\n\n\n                })\n                .catch(err => console.log(err))\n\n            // e.preventDefault();\n        };\n\n        const onFinish = values => {\n            console.log(values);\n        };\n\n        if (this.state.loading) {\n            return(\n                <div>\n                    <p> Loading... </p>\n                </div>\n            )\n        }\n        if (this.state.error || !this.state.data) { // if request failed or data is empty don't try to access it either\n            return(\n                <div>\n                    <p> An error occured </p>\n                </div>\n            )\n        }\n        return (\n            <form onSubmit={handleOk}>\n                <h2 className=\"center\" >Change data</h2>\n                <h5>Title:</h5>\n                <input type=\"text\" name=\"title\" value={ this.state.data.title } onChange={handleChange}/>\n                <h5>description:</h5>\n                <input type=\"text\" name=\"description\" value={ this.state.data.description } onChange={handleChange} />\n                <h5>Price:</h5>\n                <input type=\"text\" name=\"price\" value={ this.state.data.price } onChange={handleChange}/>\n                <h5>Member:</h5>\n                <input type=\"text\" name=\"member\" value={ this.state.data.member } onChange={handleChange}/>\n\n                <h5>Author:</h5>\n                <input type=\"text\" name=\"author\" value={ this.state.data.author } onChange={handleChange}/>\n                <Select onChange={categoryChange} name=\"genre\">\n                    {genre.map(item => (<option value={item.id}>{item.name}</option>))}\n                </Select>\n                <Select onChange={categoryChange} name=\"seller\">\n                    {seller.map(item => (<option value={item.id}>{item.username}</option>))}\n                </Select>\n\n                <Upload\n                    name=\"image\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                    beforeUpload={beforeUpload}\n                    onChange={fileChange}\n                >\n                    {this.state.imageUrl ? <img src={this.state.imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                </Upload>\n\n                <input type=\"submit\" className=\"btn-large waves-effect waves-light xbutton\" value=\"Save\"/>\n            </form>\n\n\n\n        );\n    }\n}\n\n\nconst mapStateToProps = ({ genreList: { genre }, sellerList: {seller}} ) => {\n    return { genre, seller }\n};\n\n\n\nconst mapDispatchToProps = {\n    fetchBooksSeller,\n    fetchBooksGenre,\n    saveBook\n\n\n    // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n\n\n    // return bindActionCreators({\n    //     booksLoaded\n    // }, dispatch);\n    // booksLoaded: (newBooks) => {\n    //     dispatch(booksLoaded(newBooks));\n    // }\n\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Misc));"]},"metadata":{},"sourceType":"module"}