{"ast":null,"code":"var _jsxFileName = \"/Users/yeldarlimton/Documents/spring-client/src/components/book-list/book-list.js\";\nimport React, { Component } from \"react\";\nimport BookListItem from \"../book-list-item\";\nimport './book-list.css';\nimport { connect } from \"react-redux\";\nimport { fetchBooks, bookAddedToCart, deleteArticle } from \"../../actions\";\nimport Spinner from \"../../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport { CardGroup } from \"react-bootstrap\";\nimport { Button, Col, Row } from \"antd\";\nimport ModalBook from \"../book-modal\";\nimport BookGenreList from \"../book-genre-list/book-genre-list\";\n\nconst BookList = ({\n  books,\n  bookAddedToCart,\n  deleteArticle\n}) => {\n  return /*#__PURE__*/React.createElement(CardGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, books.map(book => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: book.id,\n      className: \"book-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BookListItem, {\n      book: book,\n      bookAddedToCart: () => bookAddedToCart(book.id),\n      deleteArticle: () => deleteArticle(book.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    }));\n  }));\n};\n\nclass BookListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalBlogVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const openModal = () => {\n      this.setState({\n        modalBlogVisible: true\n      });\n    };\n\n    const closeModal = () => {\n      this.setState({\n        modalBlogVisible: false\n      });\n    };\n\n    const {\n      books,\n      loading,\n      error,\n      bookAddedToCart,\n      deleteArticle,\n      isAuth\n    } = this.props;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }\n      });\n    }\n\n    const AddButton = /*#__PURE__*/React.createElement(Button, {\n      className: \"add-new\",\n      type: \"primary\",\n      block: true,\n      size: \"small\",\n      style: {\n        margin: 10\n      },\n      onClick: openModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }));\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(ErrorIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, isAuth ? AddButton : \"\", /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BookGenreList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BookList, {\n      books: books,\n      bookAddedToCart: bookAddedToCart,\n      deleteArticle: deleteArticle,\n      isAuth: isAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 26\n      }\n    }))), /*#__PURE__*/React.createElement(ModalBook, {\n      modalBlogVisible: this.state.modalBlogVisible,\n      close: closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  bookList: {\n    books,\n    loading,\n    error\n  },\n  auth: {\n    isAuth\n  }\n}) => {\n  return {\n    books,\n    loading,\n    error,\n    isAuth\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchBooks,\n  bookAddedToCart,\n  deleteArticle // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n  // return bindActionCreators({\n  //     booksLoaded\n  // }, dispatch);\n  // booksLoaded: (newBooks) => {\n  //     dispatch(booksLoaded(newBooks));\n  // }\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BookListContainer);","map":{"version":3,"sources":["/Users/yeldarlimton/Documents/spring-client/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","connect","fetchBooks","bookAddedToCart","deleteArticle","Spinner","ErrorIndicator","CardGroup","Button","Col","Row","ModalBook","BookGenreList","BookList","books","map","book","id","BookListContainer","state","modalBlogVisible","componentDidMount","props","render","openModal","setState","closeModal","loading","error","isAuth","AddButton","margin","marginTop","mapStateToProps","bookList","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport BookListItem from \"../book-list-item\";\r\nimport './book-list.css';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchBooks, bookAddedToCart, deleteArticle } from \"../../actions\";\r\nimport Spinner from \"../../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport {CardGroup} from \"react-bootstrap\";\r\nimport {Button, Col, Row} from \"antd\";\r\nimport ModalBook from \"../book-modal\";\r\nimport BookGenreList from \"../book-genre-list/book-genre-list\";\r\n\r\nconst BookList = ({ books, bookAddedToCart, deleteArticle }) => {\r\n    return (\r\n        <CardGroup>\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}\r\n                            className=\"book-item\">\r\n                            <BookListItem book={book}\r\n                                  bookAddedToCart={() => bookAddedToCart(book.id)}\r\n                                  deleteArticle={() => deleteArticle(book.id)}\r\n                            />\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </CardGroup>\r\n    );\r\n};\r\n\r\nclass BookListContainer extends Component{\r\n    state = {\r\n        modalBlogVisible: false\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const openModal = () => {\r\n            this.setState({\r\n                modalBlogVisible: true\r\n            })\r\n        }\r\n\r\n        const closeModal = () => {\r\n            this.setState({\r\n                modalBlogVisible: false\r\n            })\r\n        }\r\n        const { books, loading, error, bookAddedToCart, deleteArticle, isAuth } = this.props;\r\n        if(loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n\r\n        const AddButton = (\r\n            <Button className=\"add-new\" type=\"primary\" block size=\"small\" style={{margin: 10}} onClick={openModal}>\r\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"/>\r\n            </Button>);\r\n\r\n        if(error){\r\n            return <ErrorIndicator />\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {isAuth ? AddButton:\"\"}\r\n                <Row style={{marginTop: 20}}>\r\n                    <Col span={4} ><BookGenreList/>\r\n                        <div className=\"vl\"></div></Col>\r\n                    <Col span={20}>\r\n                         <BookList  books={books} bookAddedToCart={bookAddedToCart} deleteArticle={deleteArticle} isAuth={isAuth}/>\r\n                    </Col>\r\n                </Row>\r\n                <ModalBook modalBlogVisible={this.state.modalBlogVisible} close={closeModal}/>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error}, auth: {isAuth} }) => {\r\n    return { books, loading, error, isAuth }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchBooks,\r\n    bookAddedToCart,\r\n    deleteArticle\r\n\r\n    // onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n\r\n\r\n    // return bindActionCreators({\r\n    //     booksLoaded\r\n    // }, dispatch);\r\n    // booksLoaded: (newBooks) => {\r\n    //     dispatch(booksLoaded(newBooks));\r\n    // }\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookListContainer);\r\n"]},"metadata":{},"sourceType":"module"}