{"ast":null,"code":"// import React, {Component, Fragment} from \"react\";\n// import {Row, Col} from 'antd'\n// import { connect } from \"react-redux\";\n// import axios from \"axios\";\n// import {bookAddedToCart, fetchBooks} from \"../../actions\";\n// import {withRouter} from 'react-router-dom'\n// import { Comment, Avatar, Form, Button, List, Input } from 'antd';\n// import moment from 'moment';\n//\n// const { TextArea } = Input;\n//\n// const CommentList = ({ comments }) => (\n//     <List\n//         dataSource={comments}\n//         header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n//         itemLayout=\"horizontal\"\n//         renderItem={props => <Comment {...props} />}\n//     />\n// );\n//\n// const Editor = ({ onChange, onSubmit, submitting, value }) => (\n//     <div>\n//         <Form.Item>\n//             <TextArea rows={4} onChange={onChange} value={value} />\n//         </Form.Item>\n//         <Form.Item>\n//             <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n//                 Add Comment\n//             </Button>\n//         </Form.Item>\n//     </div>\n// );\n//\n// class BookDetail extends Component{\n//\n//     state = {\n//         book: null,\n//         comments: null\n//     }\n//\n//\n//\n//     componentDidMount() {\n//         let id = this.props.match.params.id;\n//         axios.get('/api/v1/shop/detail/' + id)\n//             .then(res => {\n//                 this.setState({\n//                     ...this.state,\n//                     book: res.data\n//                 })\n//             })\n//\n//\n//     }\n//\n//     state = {\n//         comments: [],\n//         submitting: false,\n//         value: '',\n//     };\n//\n//     handleSubmit = () => {\n//         if (!this.state.value) {\n//             return;\n//         }\n//\n//         this.setState({\n//             submitting: true,\n//         });\n//\n//         setTimeout(() => {\n//             this.setState({\n//                 submitting: false,\n//                 value: '',\n//                 comments: [\n//                     {\n//                         author: this.props.username,\n//                         avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n//                         content: <p>{this.state.value}</p>,\n//                         datetime: moment().fromNow(),\n//                     },\n//                     ...this.state.comments,\n//                 ],\n//             });\n//         }, 1000);\n//     };\n//\n//     handleChange = e => {\n//         this.setState({\n//             value: e.target.value,\n//         });\n//     };\n//\n//\n//     render() {\n//         const { onAddedToCart } = this.props;\n//\n//         const { comments, submitting, value } = this.state;\n//\n//         const addButton = (<button onClick={() => onAddedToCart(this.state.book.id)} className=\"btn btn-info add-to-cart\">Add to cart</button>);\n//\n//         console.log(this.state.book);\n//         const book = this.state.book ? (\n//             <div style={{margin: 50}}>\n//                 <Row>\n//                     <Col span={8} >\n//                         <img src={this.state.book.image} style={{width: 300, borderRadius: 10}} />\n//                     </Col>\n//                     <Col span={16} >\n//                         <h2>{this.state.book.title}</h2>\n//                         <p>Price: ${this.state.book.price}</p>\n//                         <p>Author: {this.state.book.author}</p>\n//                         <p>{this.state.book.description}</p>\n//                         {this.props.auth?addButton:\"\"}\n//                     </Col>\n//                 </Row>\n//                     <div>\n//                         {comments.length > 0 && <CommentList comments={comments} />}\n//                         <Comment\n//                             avatar={\n//                                 <Avatar\n//                                     src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n//                                     alt=\"Han Solo\"\n//                                 />\n//                             }\n//                             content={\n//                                 <Editor\n//                                     onChange={this.handleChange}\n//                                     onSubmit={this.handleSubmit}\n//                                     submitting={submitting}\n//                                     value={value}\n//                                 />\n//                             }\n//                         />\n//                     </div>\n//             </div>\n//\n//         ):(<div className=\"center\">Loading...</div>);\n//\n//         return (\n//             <Fragment>\n//                 <div>\n//                     {book}\n//                 </div>\n//             </Fragment>\n//         );\n//     }\n// }\n//\n//\n// const mapStateToProps = state => ({\n//     username: state.auth.username,\n//     auth: state.auth.isAuth\n// });\n//\n//\n//\n// const mapDispatchToProps = (dispatch, { bookstoreService }) => {\n//     return {\n//         fetchBooks: fetchBooks(bookstoreService, dispatch),\n//         onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n//     }\n// }\n//\n// export default withRouter(connect(mapStateToProps, mapDispatchToProps)(BookDetail));\n//\n//\n// // export default connect(mapStateToProps)(BookDetail);\n//\n// // export default BookDetail;\n//","map":{"version":3,"sources":["/Users/yeldarlimton/Documents/spring-react/spring-client/src/components/pages/book-detail-page.js"],"names":[],"mappingssourcesContent":["// import React, {Component, Fragment} from \"react\";\r\n// import {Row, Col} from 'antd'\r\n// import { connect } from \"react-redux\";\r\n// import axios from \"axios\";\r\n// import {bookAddedToCart, fetchBooks} from \"../../actions\";\r\n// import {withRouter} from 'react-router-dom'\r\n// import { Comment, Avatar, Form, Button, List, Input } from 'antd';\r\n// import moment from 'moment';\r\n//\r\n// const { TextArea } = Input;\r\n//\r\n// const CommentList = ({ comments }) => (\r\n//     <List\r\n//         dataSource={comments}\r\n//         header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n//         itemLayout=\"horizontal\"\r\n//         renderItem={props => <Comment {...props} />}\r\n//     />\r\n// );\r\n//\r\n// const Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n//     <div>\r\n//         <Form.Item>\r\n//             <TextArea rows={4} onChange={onChange} value={value} />\r\n//         </Form.Item>\r\n//         <Form.Item>\r\n//             <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n//                 Add Comment\r\n//             </Button>\r\n//         </Form.Item>\r\n//     </div>\r\n// );\r\n//\r\n// class BookDetail extends Component{\r\n//\r\n//     state = {\r\n//         book: null,\r\n//         comments: null\r\n//     }\r\n//\r\n//\r\n//\r\n//     componentDidMount() {\r\n//         let id = this.props.match.params.id;\r\n//         axios.get('/api/v1/shop/detail/' + id)\r\n//             .then(res => {\r\n//                 this.setState({\r\n//                     ...this.state,\r\n//                     book: res.data\r\n//                 })\r\n//             })\r\n//\r\n//\r\n//     }\r\n//\r\n//     state = {\r\n//         comments: [],\r\n//         submitting: false,\r\n//         value: '',\r\n//     };\r\n//\r\n//     handleSubmit = () => {\r\n//         if (!this.state.value) {\r\n//             return;\r\n//         }\r\n//\r\n//         this.setState({\r\n//             submitting: true,\r\n//         });\r\n//\r\n//         setTimeout(() => {\r\n//             this.setState({\r\n//                 submitting: false,\r\n//                 value: '',\r\n//                 comments: [\r\n//                     {\r\n//                         author: this.props.username,\r\n//                         avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n//                         content: <p>{this.state.value}</p>,\r\n//                         datetime: moment().fromNow(),\r\n//                     },\r\n//                     ...this.state.comments,\r\n//                 ],\r\n//             });\r\n//         }, 1000);\r\n//     };\r\n//\r\n//     handleChange = e => {\r\n//         this.setState({\r\n//             value: e.target.value,\r\n//         });\r\n//     };\r\n//\r\n//\r\n//     render() {\r\n//         const { onAddedToCart } = this.props;\r\n//\r\n//         const { comments, submitting, value } = this.state;\r\n//\r\n//         const addButton = (<button onClick={() => onAddedToCart(this.state.book.id)} className=\"btn btn-info add-to-cart\">Add to cart</button>);\r\n//\r\n//         console.log(this.state.book);\r\n//         const book = this.state.book ? (\r\n//             <div style={{margin: 50}}>\r\n//                 <Row>\r\n//                     <Col span={8} >\r\n//                         <img src={this.state.book.image} style={{width: 300, borderRadius: 10}} />\r\n//                     </Col>\r\n//                     <Col span={16} >\r\n//                         <h2>{this.state.book.title}</h2>\r\n//                         <p>Price: ${this.state.book.price}</p>\r\n//                         <p>Author: {this.state.book.author}</p>\r\n//                         <p>{this.state.book.description}</p>\r\n//                         {this.props.auth?addButton:\"\"}\r\n//                     </Col>\r\n//                 </Row>\r\n//                     <div>\r\n//                         {comments.length > 0 && <CommentList comments={comments} />}\r\n//                         <Comment\r\n//                             avatar={\r\n//                                 <Avatar\r\n//                                     src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n//                                     alt=\"Han Solo\"\r\n//                                 />\r\n//                             }\r\n//                             content={\r\n//                                 <Editor\r\n//                                     onChange={this.handleChange}\r\n//                                     onSubmit={this.handleSubmit}\r\n//                                     submitting={submitting}\r\n//                                     value={value}\r\n//                                 />\r\n//                             }\r\n//                         />\r\n//                     </div>\r\n//             </div>\r\n//\r\n//         ):(<div className=\"center\">Loading...</div>);\r\n//\r\n//         return (\r\n//             <Fragment>\r\n//                 <div>\r\n//                     {book}\r\n//                 </div>\r\n//             </Fragment>\r\n//         );\r\n//     }\r\n// }\r\n//\r\n//\r\n// const mapStateToProps = state => ({\r\n//     username: state.auth.username,\r\n//     auth: state.auth.isAuth\r\n// });\r\n//\r\n//\r\n//\r\n// const mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n//     return {\r\n//         fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n//         onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n//     }\r\n// }\r\n//\r\n// export default withRouter(connect(mapStateToProps, mapDispatchToProps)(BookDetail));\r\n//\r\n//\r\n// // export default connect(mapStateToProps)(BookDetail);\r\n//\r\n// // export default BookDetail;\r\n//\r\n"]},"metadata":{},"sourceType":"module"}